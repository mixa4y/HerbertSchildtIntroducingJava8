package TheBook.Chapter3;

// Using break with a  label. ( break с меткой ) !!!!!!!!

public class List_25_BreakDemo_4 {
    public static void main(String[] args){
        int i;

        for(i=1; i<4; i++){
            one: {
                two:  {
                    three: {
                          System.out.println("\ni равно " + i);
                         if(i==1) break one; // переход по метке
                         if(i==2) break two; // переход по метке
                         if (i==3) break three; // переход по метке

                        //Эта строка кода никогда не будет достигнута
                     System.out.println("не будет выведено00");
                     }
                    System.out.println("После блока three");
                }
                System.out.println("После блока two");
            }
            System.out.println("После блока one");
        }
        System.out.println("После цикла for");
    }
}
// Рассмотрим подробнее приведенный выше фрагмент кода, чтобы лучше понять, каким
//образом получается именно такой результат его выполнения. Когда значение переменной
//i равно 1, условие первого оператора if становится истинным и управление передается
// в конец блока с меткой one. В результате выводится сообщение "После блока
//one". Если значение переменной i равно 2, то успешно завершается проверка условия
//во втором операторе if и выполнение программы продолжается с конца блока с
//меткой two. В результате выводятся по порядку сообщения "После блока two" и "После
//блока one". Когда же переменная i принимает значение 3, истинным становится условие
//в третьем операторе if и управление передается в конец блока с меткой three.
//В этом случае выводятся все три сообщения: два упомянутых выше, а также сообщение
//"После блока three", а затем еще и сообщение "После цикла for".
